{
  "work": [
    {
      "name": "NBA Crunch Time with SAP",
      "slug": "crunchtime",
      "hero": { "source": "cloudinary", "id": "game-selection.jpg" },
      "technologies": ["TouchDesigner", "Kinect"],
      "highlights": [
        "Used Kinect to create a touch-free pointing interface for the experience",
        "Integrated NBA footage with interactive UX for a seamless experience on input sketches and video from Wildlife's designers",
        "Tested and approved on site by the NBA commissioner, Adam Silver, personally.",
        "Developed both Kinect and tablet versions on a strict and limited timeline by using the same TouchDesigner file and writing a build script."
      ],
      "company": "Wildlife, Momentum, NBA",
      "position": "Contract Developer",
      "summary": "An interactive kinect experience where users would coach a basketball team at crunch time. Also adapted for tablets.",
      "description": "The NBA and SAP wanted to highlight stats in an innovative way at the NBA Commissioner's Tech Summit. To do this we created an interactive experience where the user was presented footage of a play followed by three options of which call to make next. They used the stats to decide on a play and then pointed to the screen to select it and play it. The interaction was powered by Touchdesigner and Kinect. The NBA also requested a tablet experience to be playable while executives waiting for meetings. We adapted the interactive experience to use multitouch and installed it on Surface Pro tablets.",
      "video": { "source": "cloudinary", "id": "runthrough.mp4" },
      "images": [
        { "source": "cloudinary", "id": "techzone.jpg" },
        { "source": "cloudinary", "id": "pointing.jpg" }
      ],
      "tags": [
        "interactive"
      ]
    },
    {
      "name": "Ringly Android App",
      "slug": "ringly",
      "link" : "https://play.google.com/store/apps/details?id=com.ringly.ringly",
      "hero": { "source": "cloudinary", "id": "screens.jpg" },
      "technologies": ["RxJava/RxAndroid", "Bluetooth"],
      "highlights": [
        "Rewrote and redesigned the Android app to follow Material guidelines",
        "Added step tracking and calorie counts for their new models with accelerometers",
        "Worked closely with the hardware developer to ensure accurate bluetooth communication",
        "Used modern Android libraries (Rx, Sqlite) to ensure fast and tested development"
      ],
      "company": "Ringly",
      "position": "Contract Developer",
      "summary": "The Android app for Ringly's smart jewelry. My role was to redesign the app using Material Design principles and add in step tracking capabilities.",
      "description": "Working closely with the hardware team and Ringly's on-site designer, I updated the app to reflect modern Android approaches. Material Design components and principles are now front and center in the app design and architecture. To add step tracking capabilties, I updated the codebase to use modern RxJava and RxAndroid libraries and worked with the hardware team to ensure compatibilty with Android's bluetooth system.",
      "video": { "source": "youtube", "id": "C5c06ayfTYs"},
      "images": [
        { "source": "cloudinary", "id": "screens.jpg" }
      ],
      "tags": [
        "mobile"
      ]
    },
    {
      "name": "#LetsJoinHands",
      "slug": "lets-join-hands",
      "link" : "http://wildlife.la/letsjoinhands",
      "hero": { "source": "cloudinary", "id": "crowd.jpg" },
      "technologies": ["Cinder", "C++", "OSC", "UDP"],
      "highlights": [
        "Beautiful touch drawing and live video stream interface implemented in C++ and Cinder, with animated drawings, an OpenGL keyboard input, and Adobe After Effects animations.",
        "Created a custom UDP video streaming protocol and TCP communication protocol to satisfy the needs of running on a 4G mobile network in a crowded city center.",
        "Wildlifeâ€™s client, Saatchi & Saatchi, liked the project so much they discussed installing it permanently between two offices."
      ],
      "company": "Wildlife, Saatchi & Saatchi, Toyota",
      "position": "Contract Developer, team of two",
      "summary": "An interactive drawing experience between LA and NYC using C++, Cinder, and a custom UDP video streaming protocol over a mobile network for Toyota's #LetsJoinHands campaign",
      "description": "For three days, in collaboration with Saatchi & Saatchi, Wildlife had a booth in Herald Square, New York, and Hollywood and Highland, Los Angeles, for an interactive experience for Toyota's campaign. The experience connected two people across the country with webcams and a touchscreen they could draw on. The drawings were displayed on both screens along with prompts like \"Draw yourselves under the ocean.\" It was challenging to get everything working in a month, but worth it when seeing people engage in a truly meaningful experience! \n\n My favorite part was when a man with no arms came in and drew on the screen with his feet -- he was quite an impressive artist! The other highlights included little kids who were eager to draw on such a big screen, a man in a batman costume, and a Johnny Depp impersonator.",
      "video": { "source": "cloudinary", "id":"marquee.mp4" },
      "images": [
        { "source" : "cloudinary", "id": "crowd.jpg" },
        { "source": "cloudinary", "id": "girl.jpg" },
        { "source": "cloudinary", "id": "LetsJoinFeet.jpg" }
      ],
      "tags": [
        "interactive"
      ]
    },
    {
      "name": "aviv.nyc",
      "slug": "aviv-nyc",
      "hero": { "source": "cloudinary", "id": "Aviv-screen.jpg" },
      "technologies": ["Haskell", "React"],
      "highlights" : [
        "Used Facebook Graph API to pull event data so that venue owners wouldn't have to update the site separately",
        "Worked with a designer to create a website that is user friendly and on brand",
        "Using Haskell/Yesod for the backend reduced data load and processing times.",
        "Kept load times consistently low."
      ],
      "company": "Aviv",
      "link" : "https://aviv.nyc",
      "position": "Volunteer Developer",
      "summary": "A venue website with data pulled from the facebook graph API. The venue owners don't need to worry about updating another thing as they update facebook regularly. React front end, Haskell backend.",
      "description": "Aviv is my home-away-from-home, so this is probably the work of mine that I use the most. Built with [Sharon Wagner's](http://sharonlynnewagner.com/) incredible design, it gets a lot of love from frequent venue-goers for its simplicity and ease of use.",
      "images" : [
        { "source" : "cloudinary", "id": "Aviv.png" }
      ],
      "tags": [
        "web",
        "mobile"
      ]
    },
    {
      "name": "Oscillare",
      "slug": "oscillare",
      "hero": { "source": "cloudinary", "id": "game-selection.jpg" },
      "technologies": ["Haskell", "OSC"],
      "highlights": [
        "Developed a live-code environment similar to Tidal but for programming OpenGL",
        "Scripted touchdesigner in python to ensure live visuals run at 60fps",
        "Live-coded at Knockdown Center, Park Church Coop, and Alphaville, among others, and for bands ranging from experimental electronic (Excepter), to rap (RP Boo), to DJ sets (Julianna Huxtable), to punk (So So Glos). Largest show, at Knockdown Center, was ~1500 people."
      ],
      "link" : "https://github.com/ulyssesp/oscillare",
      "position": "Sole Developer",
      "summary": "Live coding environment for video djing.",
      "description": "Inspired by Tidal, this is my first forray into live coding, the practice of creating art in a performance using code. It's like the backend ([oschader-cinder](https://github.com/ulyssesp/oschader-cinder)) is the strings of a piano, and code snippets are the keys. By generalizing possible operations into two groups, outputs and inputs, and allowing almost any combination between the two types, an infinite number of unique visuals can be achieved. \n\n The system is built in an abstract way so that adding new visuals is easy. Because of this, Oschader-Cinder is my experimental ground for visual algorithms like flocking, smoke simulation, and math-based glsl shaders.",
      "hero" : { "source" : "cloudinary", "id": "Wall.jpg" },
      "images" : [{ "source" : "cloudinary", "id": "Wall.jpg" }],
      "video": { "source": "youtube", "id": "6WTVgs6CYVQ"},
      "tags": [
        "interactive",
        "performance"
      ]
    },
    {
      "name": "Trello Android and Web",
      "slug": "trello",
      "link" : "https://trello.com",
      "hero": { "source": "cloudinary", "id": "android-material-screenshots.jpg" },
      "technologies": ["RxJava/RxAndroid", "Android Wear", "Google Nearby", "Backbone.js", "React", "Build Bot"],
      "highlights": [
        "Added 18 new languages to the web client to gain users across the world.",
        "Solo developer for a buildbot server to automatically push and pull strings from Transifex for internationalization. Buildbot saved hours of developer time and reduced human error that had delayed previous new features.",
        "Rewrote significant portions of the web application from Backbone to React to improve performance and simplify components.",
        "Managed biweekly to monthly releases, coordinating with a team of 3-4 engineers. In addition to translation, buildbot also continuously built internal alpha builds which changed these from bi weekly to daily builds that we could be confident were fit for release.",
        "Primary engineer for Trello on Android Wear and Google Nearby pre-release integrations. Worked confidentially with Google engineers during the development period.",
        "Received Google Play's Editor's Choice and Top Developer awards from 2014 onwards. Pre-release integrations such as Wear and Nearby secured our award."
      ],
      "company": "Trello",
      "position": "Developer",
      "summary": "A project management application with more than 10 million users.",
      "description": "Trello was the best place a recent NYU CS grad could end up. At Trello, engineers manage themselves, deciding what they work on and picking up projects based on interest and value to the company. While there I worked on two pre-release Android integrations, Android Wear and Google Nearby, and worked to move the web client from backbone to React.",
      "video": { "source": "youtube", "id": "CzJqIbLe2Lg" },
      "images" : [
        { "source": "cloudinary", "id": "trello_wear.jpg" },
        { "source": "cloudinary", "id": "android-material-screenshots.jpg" }
      ],
      "tags": [
        "web",
        "mobile"
      ]
    }
  ],
  "unpublished" : [
  ]
}
